/* tslint:disable */
/* eslint-disable */
/**
 * Wardley Mapping Crew API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.8.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ComponentRequest,
    ComponentRequestFromJSON,
    ComponentRequestToJSON,
    HTTPValidationError,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    MapIdRequest,
    MapIdRequestFromJSON,
    MapIdRequestToJSON,
    OwmTextRequest,
    OwmTextRequestFromJSON,
    OwmTextRequestToJSON,
    SearchComponentRequest,
    SearchComponentRequestFromJSON,
    SearchComponentRequestToJSON,
} from '../models';

export interface GenerateMapFromIdV2GenerateMapfromidPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GenerateMapFromTextV2GenerateMapfromtextPostRequest {
    owmTextRequest: OwmTextRequest;
}

export interface GenerateSvgMapV2GenerateSvgmapPostRequest {
    owmTextRequest: OwmTextRequest;
}

export interface GetOwmAnchorsV2GetOwmAnchorsPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmAnnotationsV2GetOwmAnnotationsPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmComponentV2GetOwmComponentPostRequest {
    componentRequest: ComponentRequest;
}

export interface GetOwmComponentsV2GetOwmComponentsPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmMapTextV2GetOwmTextPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmNotesV2GetOwmNotesPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmPipelinesV2GetOwmPipelinesPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface GetOwmWarningsV2GetOwmWarningsPostRequest {
    mapIdRequest: MapIdRequest;
}

export interface SearchOwmComponentsV2SearchOwmComponentsPostRequest {
    searchComponentRequest: SearchComponentRequest;
}

/**
 * 
 */
export class OpenWardleyMapsApi extends runtime.BaseAPI {

    /**
     * API endpoint to generate a Wardley Map image from map_id.  :param request: The request body containing the map_id. :return: JSONResponse with the image URL.
     * Generate Map From Id
     */
    async generateMapFromIdV2GenerateMapfromidPostRaw(requestParameters: GenerateMapFromIdV2GenerateMapfromidPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling generateMapFromIdV2GenerateMapfromidPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/generate-mapfromid`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to generate a Wardley Map image from map_id.  :param request: The request body containing the map_id. :return: JSONResponse with the image URL.
     * Generate Map From Id
     */
    async generateMapFromIdV2GenerateMapfromidPost(requestParameters: GenerateMapFromIdV2GenerateMapfromidPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.generateMapFromIdV2GenerateMapfromidPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to generate a Wardley Map image from text.  :param request: The request body containing the owmtext. :return: JSONResponse with the image URL.
     * Generate Map From Text
     */
    async generateMapFromTextV2GenerateMapfromtextPostRaw(requestParameters: GenerateMapFromTextV2GenerateMapfromtextPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.owmTextRequest === null || requestParameters.owmTextRequest === undefined) {
            throw new runtime.RequiredError('owmTextRequest','Required parameter requestParameters.owmTextRequest was null or undefined when calling generateMapFromTextV2GenerateMapfromtextPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/generate-mapfromtext`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: OwmTextRequestToJSON(requestParameters.owmTextRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to generate a Wardley Map image from text.  :param request: The request body containing the owmtext. :return: JSONResponse with the image URL.
     * Generate Map From Text
     */
    async generateMapFromTextV2GenerateMapfromtextPost(requestParameters: GenerateMapFromTextV2GenerateMapfromtextPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.generateMapFromTextV2GenerateMapfromtextPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to generate a Wardley Map SVG from text.  :param request: The request body containing the owmtext. :return: JSONResponse with the SVG image URL.
     * Generate Svg Map
     */
    async generateSvgMapV2GenerateSvgmapPostRaw(requestParameters: GenerateSvgMapV2GenerateSvgmapPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.owmTextRequest === null || requestParameters.owmTextRequest === undefined) {
            throw new runtime.RequiredError('owmTextRequest','Required parameter requestParameters.owmTextRequest was null or undefined when calling generateSvgMapV2GenerateSvgmapPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/generate-svgmap`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: OwmTextRequestToJSON(requestParameters.owmTextRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to generate a Wardley Map SVG from text.  :param request: The request body containing the owmtext. :return: JSONResponse with the SVG image URL.
     * Generate Svg Map
     */
    async generateSvgMapV2GenerateSvgmapPost(requestParameters: GenerateSvgMapV2GenerateSvgmapPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.generateSvgMapV2GenerateSvgmapPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch anchors for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the anchors.
     * Get Owm Anchors
     */
    async getOwmAnchorsV2GetOwmAnchorsPostRaw(requestParameters: GetOwmAnchorsV2GetOwmAnchorsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmAnchorsV2GetOwmAnchorsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-anchors`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch anchors for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the anchors.
     * Get Owm Anchors
     */
    async getOwmAnchorsV2GetOwmAnchorsPost(requestParameters: GetOwmAnchorsV2GetOwmAnchorsPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmAnchorsV2GetOwmAnchorsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch annotations for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the annotations.
     * Get Owm Annotations
     */
    async getOwmAnnotationsV2GetOwmAnnotationsPostRaw(requestParameters: GetOwmAnnotationsV2GetOwmAnnotationsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmAnnotationsV2GetOwmAnnotationsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-annotations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch annotations for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the annotations.
     * Get Owm Annotations
     */
    async getOwmAnnotationsV2GetOwmAnnotationsPost(requestParameters: GetOwmAnnotationsV2GetOwmAnnotationsPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmAnnotationsV2GetOwmAnnotationsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch a specific component for a Wardley Map.  :param request: The request body containing the map_id and component name. :return: JSONResponse with the component.
     * Get Owm Component
     */
    async getOwmComponentV2GetOwmComponentPostRaw(requestParameters: GetOwmComponentV2GetOwmComponentPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.componentRequest === null || requestParameters.componentRequest === undefined) {
            throw new runtime.RequiredError('componentRequest','Required parameter requestParameters.componentRequest was null or undefined when calling getOwmComponentV2GetOwmComponentPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-component`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ComponentRequestToJSON(requestParameters.componentRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch a specific component for a Wardley Map.  :param request: The request body containing the map_id and component name. :return: JSONResponse with the component.
     * Get Owm Component
     */
    async getOwmComponentV2GetOwmComponentPost(requestParameters: GetOwmComponentV2GetOwmComponentPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmComponentV2GetOwmComponentPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch components for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the components.
     * Get Owm Components
     */
    async getOwmComponentsV2GetOwmComponentsPostRaw(requestParameters: GetOwmComponentsV2GetOwmComponentsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmComponentsV2GetOwmComponentsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-components`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch components for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the components.
     * Get Owm Components
     */
    async getOwmComponentsV2GetOwmComponentsPost(requestParameters: GetOwmComponentsV2GetOwmComponentsPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmComponentsV2GetOwmComponentsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch the text of a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the map text.
     * Get Owm Map Text
     */
    async getOwmMapTextV2GetOwmTextPostRaw(requestParameters: GetOwmMapTextV2GetOwmTextPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmMapTextV2GetOwmTextPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-text`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch the text of a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the map text.
     * Get Owm Map Text
     */
    async getOwmMapTextV2GetOwmTextPost(requestParameters: GetOwmMapTextV2GetOwmTextPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmMapTextV2GetOwmTextPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch notes for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the notes.
     * Get Owm Notes
     */
    async getOwmNotesV2GetOwmNotesPostRaw(requestParameters: GetOwmNotesV2GetOwmNotesPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmNotesV2GetOwmNotesPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-notes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch notes for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the notes.
     * Get Owm Notes
     */
    async getOwmNotesV2GetOwmNotesPost(requestParameters: GetOwmNotesV2GetOwmNotesPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmNotesV2GetOwmNotesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch pipelines for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the pipelines.
     * Get Owm Pipelines
     */
    async getOwmPipelinesV2GetOwmPipelinesPostRaw(requestParameters: GetOwmPipelinesV2GetOwmPipelinesPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmPipelinesV2GetOwmPipelinesPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-pipelines`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch pipelines for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the pipelines.
     * Get Owm Pipelines
     */
    async getOwmPipelinesV2GetOwmPipelinesPost(requestParameters: GetOwmPipelinesV2GetOwmPipelinesPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmPipelinesV2GetOwmPipelinesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to fetch warnings for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the warnings.
     * Get Owm Warnings
     */
    async getOwmWarningsV2GetOwmWarningsPostRaw(requestParameters: GetOwmWarningsV2GetOwmWarningsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.mapIdRequest === null || requestParameters.mapIdRequest === undefined) {
            throw new runtime.RequiredError('mapIdRequest','Required parameter requestParameters.mapIdRequest was null or undefined when calling getOwmWarningsV2GetOwmWarningsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/get-owm-warnings`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapIdRequestToJSON(requestParameters.mapIdRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch warnings for a Wardley Map.  :param request: The request body containing the map_id. :return: JSONResponse with the warnings.
     * Get Owm Warnings
     */
    async getOwmWarningsV2GetOwmWarningsPost(requestParameters: GetOwmWarningsV2GetOwmWarningsPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getOwmWarningsV2GetOwmWarningsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to search components in a Wardley Map.  :param request: The request body containing the map_id and search term. :return: JSONResponse with the search results.
     * Search Owm Components
     */
    async searchOwmComponentsV2SearchOwmComponentsPostRaw(requestParameters: SearchOwmComponentsV2SearchOwmComponentsPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.searchComponentRequest === null || requestParameters.searchComponentRequest === undefined) {
            throw new runtime.RequiredError('searchComponentRequest','Required parameter requestParameters.searchComponentRequest was null or undefined when calling searchOwmComponentsV2SearchOwmComponentsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/search-owm-components`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SearchComponentRequestToJSON(requestParameters.searchComponentRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to search components in a Wardley Map.  :param request: The request body containing the map_id and search term. :return: JSONResponse with the search results.
     * Search Owm Components
     */
    async searchOwmComponentsV2SearchOwmComponentsPost(requestParameters: SearchOwmComponentsV2SearchOwmComponentsPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.searchOwmComponentsV2SearchOwmComponentsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
