/* tslint:disable */
/* eslint-disable */
/**
 * Wardley Mapping Crew API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.8.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    HTTPValidationError,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    TextRequest,
    TextRequestFromJSON,
    TextRequestToJSON,
} from '../models';

export interface FetchWardleyDataV2MapsFetchGetRequest {
    id: string;
}

export interface GetImageV2ImageFilenameGetRequest {
    filename: string;
}

export interface SaveWardleyMapV2MapsSavePostRequest {
    textRequest: TextRequest;
}

/**
 * 
 */
export class WardleyMapsOnlineApi extends runtime.BaseAPI {

    /**
     * API endpoint to fetch a Wardley Map by map_id.  :param map_id: The map ID to fetch. :return: JSONResponse with the map data.
     * Fetch Wardley Data
     */
    async fetchWardleyDataV2MapsFetchGetRaw(requestParameters: FetchWardleyDataV2MapsFetchGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling fetchWardleyDataV2MapsFetchGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v2/maps/fetch`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to fetch a Wardley Map by map_id.  :param map_id: The map ID to fetch. :return: JSONResponse with the map data.
     * Fetch Wardley Data
     */
    async fetchWardleyDataV2MapsFetchGet(requestParameters: FetchWardleyDataV2MapsFetchGetRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.fetchWardleyDataV2MapsFetchGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to retrieve an image by filename.  :param filename: The name of the file to retrieve. :return: FileResponse with the image.
     * Get Image
     */
    async getImageV2ImageFilenameGetRaw(requestParameters: GetImageV2ImageFilenameGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.filename === null || requestParameters.filename === undefined) {
            throw new runtime.RequiredError('filename','Required parameter requestParameters.filename was null or undefined when calling getImageV2ImageFilenameGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v2/image/{filename}`.replace(`{${"filename"}}`, encodeURIComponent(String(requestParameters.filename))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to retrieve an image by filename.  :param filename: The name of the file to retrieve. :return: FileResponse with the image.
     * Get Image
     */
    async getImageV2ImageFilenameGet(requestParameters: GetImageV2ImageFilenameGetRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.getImageV2ImageFilenameGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * API endpoint to save a Wardley Map.  :param request: The request body containing the map data. :return: JSONResponse with the saved map data.
     * Save Wardley Map
     */
    async saveWardleyMapV2MapsSavePostRaw(requestParameters: SaveWardleyMapV2MapsSavePostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.textRequest === null || requestParameters.textRequest === undefined) {
            throw new runtime.RequiredError('textRequest','Required parameter requestParameters.textRequest was null or undefined when calling saveWardleyMapV2MapsSavePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/maps/save`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TextRequestToJSON(requestParameters.textRequest),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * API endpoint to save a Wardley Map.  :param request: The request body containing the map data. :return: JSONResponse with the saved map data.
     * Save Wardley Map
     */
    async saveWardleyMapV2MapsSavePost(requestParameters: SaveWardleyMapV2MapsSavePostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.saveWardleyMapV2MapsSavePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
